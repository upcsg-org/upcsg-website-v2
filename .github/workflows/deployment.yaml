name: CI/CD with UP Servers

on:
    push:
        branches: [production]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Setup Packages
              run: npm install

            - name: Lint
              run: npm run lint
    build:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v4

            - name: Setup QEMU
              uses: docker/setup-qemu-action@v3

            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}

            - name: Build and Push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  tags: milaymaxell/upcsg:latest
    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Setup SSH
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: |
                      ${{ secrets.CSG_STEPHOST_PRIVATE_KEY }}
                      ${{ secrets.CSG_SERVER_PRIVATE_KEY }}

            - name: SSH into Step Host and Deploy to Final Server
              run: |
                  ssh -o StrictHostKeyChecking=no -A ${{ secrets.STEPHOST_USER }}@${{ secrets.STEPHOST_PRIVATE_IP }} \
                  "ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_PRIVATE_IP }} \
                  'cd upcsg-website-v2 && \
                  echo \"${{ secrets.SERVER_SUDO_PASSWORD }}\" | sudo -S docker-compose down && \
                  echo \"${{ secrets.SERVER_SUDO_PASSWORD }}\" | sudo -S docker system prune && \
                  echo \"${{ secrets.SERVER_SUDO_PASSWORD }}\" | sudo -S docker pull milaymaxell/upcsg:latest && \
                  echo \"${{ secrets.SERVER_SUDO_PASSWORD }}\" | sudo -S docker-compose up -d && \
                  echo \"${{ secrets.SERVER_SUDO_PASSWORD }}\" | sudo -S docker image prune -f'"
